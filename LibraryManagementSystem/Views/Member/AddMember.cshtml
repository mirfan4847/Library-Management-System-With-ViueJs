@model LibraryManagementSystem.ViewModel.MemberViewModel

@{
    ViewBag.Title = "AddMember";
}

<h2>AddMember</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, new SelectList(Model.Classes, "ClassId", "ClassName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="col-md-offset-2">OR</p>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RollNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RollNo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RollNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnSeachByRollNumber" class="btn btn-primary" value="Seach" />
            </div>
        </div>

        <div class="form-group divstudent" style="display:none;">
            @Html.LabelFor(model => model.StudentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StudentId, new SelectList("", "", ""), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="divStDetail" style="display:none;">

            <div class="form-group">
                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.RollNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RollNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RollNumber, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}


<script>
    $(document).ready(function () {

        $('#ClassId').on("change", function () {
            debugger;
            $.post("/Member/GetStudentByClassId", { ClassId: $('#ClassId').val() }, function (data) {
                $('.divstudent').css('display', 'block');
                $('#StudentId').val('');
                $('#StudentId').text('');
                var student = "<option>Select Student</option>";
                $.each(data.Students, function (i, item) {
                    debugger;
                    student += '<option value="' + item.StudentId + '">' + item.StudentName + '</option>';
                });
                $('#StudentId').append(student);
            });
        });

        // load student by studentid
        $('#StudentId').on('change', function () {
            $.post("/Member/GetStudentByStudentId", { studentId: $('#StudentId').val() }, function (data) {
                $('#divStDetail').css('display', 'block');
                $('#FatherName').val(data.StudentName);
                $('#PhoneNumber').val(data.PhoneNumber);
                $('#Email').val(data.Email);
                $('#RollNumber').val(data.RollNo);
            });
        });

        $('#btnSeachByRollNumber').click(function () {
            debugger;
            if ($('#ClassId').val() != 0) {
                $.post("/Member/GetStudentDetailByRollNo", { RollNo: $('#RollNo').val() }, function (data) {
                    $('#divStDetail').css('display', 'block');
                    $('#FatherName').val(data.StudentName);
                    $('#PhoneNumber').val(data.PhoneNumber);
                    $('#Email').val(data.Email);
                });
            }
        });
    });
</script>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
